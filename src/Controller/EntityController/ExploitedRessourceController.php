<?php

namespace App\Controller\EntityController;

use App\Entity\ExploitedRessource;
use App\Entity\User;
use App\Repository\ExploitedRessourceRepository;
use App\Repository\RessourceRepository;
use App\Repository\RessourceTypeRepository;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Serializer\SerializerInterface;
use Symfony\Component\Validator\Constraints\Json;
use OpenApi\Attributes as OA;

class ExploitedRessourceController extends AbstractController
{
    /**
     * This function allows us to get all exploited ressources.
     */
    #[Route('/api/exploited_ressource', name: 'exploited_ressource', methods: ['GET'])]
    #[OA\Tag(name: 'Exploited Ressource')]
    #[OA\Response(response: 200, description: 'Return all exploited ressources')]
    public function getAllExploitedRessources(ExploitedRessourceRepository $exploitedRessourceRepository,
                                              SerializerInterface $serializer): JsonResponse
    {
        $exploitedRessources = $exploitedRessourceRepository->findBy(['citizen' => $this->getUser()]);

        $jsonExploitedRessources = $serializer->serialize($exploitedRessources, 'json', ['groups' => 'getRessources']);

        return new JsonResponse($jsonExploitedRessources, Response::HTTP_OK, [], true);
    }

}
